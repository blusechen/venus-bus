<?xml version="1.0" encoding="utf-8"?>

<venus-bus>
	<remotes>
		<remote name="defaultRemote">
			<!-- 与远程连接的socket相关的配置 -->
			<factory>
				<!-- 支持多节点负责均衡的高可用配置，默认采用轮询  -->
				<property name="ipAddressList">${venus.service.defaultService.ipAddressList}</property>
				
				<!-- socket的sendBuffer缓冲区大小，单位:K -->
				<property name="sendBufferSize">64</property>
				
				<!-- socket的receiveBuffer缓冲区大小，单位:K -->
				<property name="receiveBufferSize">64</property>
				
				<property name="soTimeout">5000</property>
				
			</factory>
			
			<!-- 与每个远程节点的连接池配置，与apache的commons-pool配置一致 -->
			<pool>
				<property name="maxActive">500</property>
				<property name="maxIdle">500</property>
				<property name="minIdle">3</property>
				<property name="minEvictableIdleTimeMillis">60000</property>
				<property name="timeBetweenEvictionRunsMillis">60000</property>
				<property name="testOnBorrow">true</property>
				<property name="testWhileIdle">false</property>
			</pool>
			
			
			<!-- 用户名、密码认证方式  -->
			<authenticator class="com.meidusa.venus.client.authenticate.UserPasswordAuthenticator">
				<property name="username">venus</property>
				<property name="password">venus</property>
				<!-- 对象系列化方式，目前支持3种 ： 0:json ,1：bson , 2: java对象系列化 -->
				<property name="serializeType">0</property>
			</authenticator>
		</remote>
	</remotes>
	<!-- 服务接口列表 -->
	<services>
		<!-- 定义服务以及指定该服务提供方的远程相关配置 -->
		<service serviceName="HelloService" version="[0,100]" remote="defaultRemote"/>
		<service serviceName="ParameterizedService" version="0" remote="defaultRemote"/>
		<service serviceName="ParameterizedService" version="1" remote="defaultRemote"/>
		<!--<service class="">
			<pipeline>
				<parallel>
					<node>
						def user = userService.getUser(#{id});
					</node>
					<node>
						def profile = profileService.getProfile(#{id});
					</node>
				</parallel>
				<serial>
					def user = userService.getUser(#{id});
				</serial>
			</pipeline>
			<result>
				{
				    name:#{user.name},
				    user:#{user},
					profile:#{profile}
				}
			</result>
		</service>
		
	--></services>
</venus-bus>